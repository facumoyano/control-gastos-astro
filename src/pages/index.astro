---
import Layout from '../layouts/Layout.astro';
import LayoutTracker from '../layouts/LayoutTracker.astro';
import LayoutPages from '../layouts/LayoutPages.astro';
import LineChart from '../components/charts/LineChart';
import PieChart from '../components/charts/PieChart';
import RecentHistory from '../components/dashboard/RecentHistory.astro';
import { app } from '../config/firebase-server';
import { getAuth } from 'firebase-admin/auth';
import { getFirestore } from "firebase-admin/firestore";


interface Transaction {
    id: string;
    title: string;
    amount: number;
    date: string;
    category: string;
    type: string;
	createdAt?: string | undefined;
}


const auth = getAuth(app);

/* Verificar la sesiÃ³n actual */
if (!Astro.cookies.has("session")) {
  return Astro.redirect("/signin");
}
const sessionCookie = Astro?.cookies?.get("session")?.value;
if(!sessionCookie) return null
const decodedCookie = await auth.verifySessionCookie(sessionCookie);
const user = await auth.getUser(decodedCookie.uid);

if (!user) {
  return Astro.redirect("/signin");
}

const db = getFirestore(app);
const incomesRef = db.collection("incomes");
const expensesRef = db.collection("expenses");

const incomesSnapshot = await incomesRef.get();
const expensesSnapshot = await expensesRef.get();

const incomes = incomesSnapshot.docs.map((doc) => ({
  id: doc.id,
  type: 'income',
  ...doc.data(),
})) as Transaction[];

const expenses = expensesSnapshot.docs.map((doc) => ({
  id: doc.id,
  type: 'expense',
  ...doc.data(),
})) as Transaction[];

const transactions = [...incomes, ...expenses]
  .sort((a, b) => new Date(b?.createdAt || 0).getTime() - new Date(a?.createdAt || 0).getTime())
  .slice(0, 5);

---

<Layout title="Welcome to Astro.">
	<isAuthenticated>
		<LayoutPages>
			<LayoutTracker>
				<div class="grid grid-cols-2 gap-16 h-full">
					<div class="w-full">
						<LineChart client:load />
					</div>
					<div class="w-full flex justify-center">
						<PieChart client:load />
					</div>
					<div>
						<RecentHistory transactions={transactions} />
					</div>
				</div>
			</LayoutTracker>
		</LayoutPages>
	</isAuthenticated>
</Layout>
